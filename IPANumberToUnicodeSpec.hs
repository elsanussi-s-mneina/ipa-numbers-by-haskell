module IPANumberToUnicodeSpec where

import Control.Monad (unless)

import IPANumberToUnicode (numberToUnicode)

runNumberToUnicodeTests :: IO ()
runNumberToUnicodeTests =
	putStrLn "IPA Numbers to Convert Unicode code points"
  	>>
  	unless (numberToUnicode 101 == 'p') (error "IPA Number 101 to latin small letter p")
	>> unless (numberToUnicode 101 == '\x0070') (error "IPA Number 101 to latin small letter p code point")
	>> unless (numberToUnicode 102 == 'b') (error "IPA Number 102 to latin small letter b")
	>> unless (numberToUnicode 102 == '\x0062')
				(error "IPA Number 102 to latin small letter b code point")
	>> unless (numberToUnicode 103 == 't')
				(error "IPA Number 103 to latin small letter t")
	>> unless (numberToUnicode 103 == '\x0074')
				(error "IPA Number 103 to latin small letter t code point")
	>> unless (numberToUnicode 104  == 'd')
				(error "IPA Number 104 to latin small letter d")
	>> unless (numberToUnicode 104 == '\x0064')
				(error "IPA Number 104 to latin small letter d code point")
	>> unless (numberToUnicode 105 == 'ʈ')
				(error "IPA Number 105 to latin small letter t with retroflex hook")
	>> unless (numberToUnicode 105 == '\x0288')
				(error "IPA Number 105 to latin small letter t with retroflex hook code point")
	>> unless (numberToUnicode 106 == 'ɖ')
				(error "IPA Number 106 to latin small letter d with tail")
	>> unless (numberToUnicode 106 == '\x0256')
				(error "IPA Number 106 to latin small letter d with tail code point")
	>> unless (numberToUnicode 107 == 'c')
				(error "IPA Number 107 to latin small letter c")
	>> unless (numberToUnicode 107 == '\x0063')
				(error "IPA Number 107 to latin small letter c code point")
	>> unless (numberToUnicode 108 == 'ɟ')
				(error "IPA Number 108 to latin small dotless j with stroke")
	>> unless (numberToUnicode 108 == '\x025F')
				(error "IPA Number 108 to latin small dotless j with stroke code point")
	>> unless (numberToUnicode 109 == 'k')
				(error "IPA Number 109 to latin small letter k")
	>> unless (numberToUnicode 109 == '\x006B')
				(error "IPA Number 109 to latin small letter k code point")
	>> unless (numberToUnicode 110 == 'g')
				(error "IPA Number 110 to latin small letter g")
	>> unless (numberToUnicode 110 == '\x0067')
				(error "IPA Number 110 to latin small letter g code point")
	>> unless (numberToUnicode 111 == 'q')
				(error "IPA Number 111 to latin small letter q")
	>> unless (numberToUnicode 111 == '\x0071')
				(error "IPA Number 111 to latin small letter q code point")
	>> unless (numberToUnicode 112 == 'ɢ')
				(error "IPA Number 112 to latin letter small capital g")
	>> unless (numberToUnicode 112 == '\x0262')
				(error "IPA Number 112 to latin letter small capital g code point")
	>> unless (numberToUnicode 113 == 'ʔ')
				(error "IPA Number 113 to latin letter glottal stop")
	>> unless (numberToUnicode 113 == '\x0294')
				(error "IPA Number 113 to latin letter glottal stop code point")
	>> unless (numberToUnicode 114 == 'm')
				(error "IPA Number 114 to latin small letter m")
	>> unless (numberToUnicode 114 == '\x006D')
				(error "IPA Number 114 to latin small letter m code point")
	>> unless (numberToUnicode 115 == 'ɱ')
				(error "IPA Number 115 to latin small letter m with hook")
	>> unless (numberToUnicode 115 == '\x0271')
				(error "IPA Number 115 to latin small letter m with hook code point")
	>> unless (numberToUnicode 116 == 'n')
				(error "IPA Number 116 to latin small letter n")
	>> unless (numberToUnicode 116 == '\x006E')
				(error "IPA Number 116 to latin small letter n code point")
	>> unless (numberToUnicode 117 == 'ɳ')
				(error "IPA Number 117 to latin small letter n with retroflex hook")
	>> unless (numberToUnicode 117 == '\x0273')
				(error "IPA Number 117 to latin small letter n with retroflex hook code point")
	>> unless (numberToUnicode 118 == 'ɲ')
				(error "IPA Number 118 to latin small letter n with left hook")
	>> unless (numberToUnicode 118 == '\x0272')
				(error "IPA Number 118 to latin small letter n with left hook code point")
	>> unless (numberToUnicode 119 == 'ŋ')
				(error "IPA Number 119 to latin small letter eng")
	>> unless (numberToUnicode 119 == '\x014B')
				(error "IPA Number 119 to latin small letter eng code point")
	>> unless (numberToUnicode 120 == 'ɴ')
				(error "IPA Number 120 to latin letter small capital n")
	>> unless (numberToUnicode 120 == '\x0274')
				(error "IPA Number 120 to latin letter small capital n code point")
	>> unless (numberToUnicode 121 == 'ʙ')
				(error "IPA Number 121 to latin letter small capital b")
	>> unless (numberToUnicode 121 == '\x0299')
				(error "IPA Number 121 to latin letter small capital b code point")
	>> unless (numberToUnicode 122 == 'r')
				(error "IPA Number 122 to latin small letter r")
	>> unless (numberToUnicode 122 == '\x0072')
				(error "IPA Number 122 to latin small letter r code point")
	>> unless (numberToUnicode 123 == 'ʀ')
				(error "IPA Number 123 to latin letter small capital r")
	>> unless (numberToUnicode 123 == '\x0280')
				(error "IPA Number 123 to latin letter small capital r code point")
	>> unless (numberToUnicode 184 == 'ⱱ')
				(error "IPA Number 184 to latin small letter v with right hook")
	>> unless (numberToUnicode 184 == '\x2C71')
				(error "IPA Number 184 to latin small letter v with right hook code point")
	>> unless (numberToUnicode 124 == 'ɾ')
				(error "IPA Number 124 to latin small letter r with fishhook")
	>> unless (numberToUnicode 124 == '\x027E')
				(error "IPA Number 124 to latin small letter r with fishhook code point")
	>> unless (numberToUnicode 125 == 'ɽ')
				(error "IPA Number 125 to latin small letter r with tail")
	>> unless (numberToUnicode 125 == '\x027D')
				(error "IPA Number 125 to latin small letter r with tail code point")
	>> unless (numberToUnicode 126 == 'ɸ')
				(error "IPA Number 126 to latin small letter phi")
	>> unless (numberToUnicode 126 == '\x0278')
				(error "IPA Number 126 to latin small letter phi code point")
	>> unless (numberToUnicode 127 == 'β')
				(error "IPA Number 127 to greek small letter beta")
	>> unless (numberToUnicode 127 == '\x03B2')
				(error "IPA Number 127 to latin small letter beta code point")
	>> unless (numberToUnicode 128 == 'f')
				(error "IPA Number 128 to latin small letter f")
	>> unless (numberToUnicode 128 == '\x0066')
				(error "IPA Number 128 to latin small letter f code point")
	>> unless (numberToUnicode 129 == 'v')
				(error "IPA Number 129 to latin small letter v")
	>> unless (numberToUnicode 129 == '\x0076')
				(error "IPA Number 129 to latin small letter v code point")
	>> unless (numberToUnicode 130 == 'θ')
				(error "IPA Number 130 to greek small letter theta")
	>> unless (numberToUnicode 130 == '\x03B8')
				(error "IPA Number 130 to greek small letter theta code point")
	>> unless (numberToUnicode 131 == 'ð')
				(error "IPA Number 131 to latin small letter eth")
	>> unless (numberToUnicode 131 == '\x00F0')
				(error "IPA Number 131 to latin small letter eth code point")
	>> unless (numberToUnicode 132 == 's')
				(error "IPA Number 132 to latin small letter s")
	>> unless (numberToUnicode 132 == '\x0073')
				(error "IPA Number 132 to latin small letter s code point")
	>> unless (numberToUnicode 133 == 'z')
				(error "IPA Number 133 to latin small letter z")
	>> unless (numberToUnicode 133 == '\x007A')
				(error "IPA Number 133 to latin small letter z code point")
	>> unless (numberToUnicode 134 == 'ʃ')
				(error "IPA Number 134 to latin small letter esh")
	>> unless (numberToUnicode 134 == '\x0283')
				(error "IPA Number 134 to latin small letter esh code point")
	>> unless (numberToUnicode 135 == 'ʒ')
				(error "IPA Number 135 to latin small letter ezh")
	>> unless (numberToUnicode 135 == '\x0292')
				(error "IPA Number 135 to latin small letter ezh code point")
	>> unless (numberToUnicode 136 == 'ʂ')
				(error "IPA Number 136 to latin small letter s with hook")
	>> unless (numberToUnicode 136 == '\x0282')
				(error "IPA Number 136 to latin small letter s with hook code point")
	>> unless (numberToUnicode 137 == 'ʐ')
				(error "IPA Number 137 to latin small letter z with retroflex hook")
	>> unless (numberToUnicode 137 == '\x0290')
				(error "IPA Number 137 to latin small letter z with retroflex hook code point")
	>> unless (numberToUnicode 138 == 'ç')
				(error "IPA Number 138 to latin small letter c with cedilla")
	>> unless (numberToUnicode 138 == '\x00E7')
				(error "IPA Number 138 to latin small letter c with cedilla code point")
	>> unless (numberToUnicode 139 == 'ʝ')
				(error "IPA Number 139 to latin small letter j with crossed tail")
	>> unless (numberToUnicode 139 == '\x029D')
				(error "IPA Number 139 to latin small letter j with crossed tail code point")
	>> unless (numberToUnicode 140 == 'x')
				(error "IPA Number 140 to latin small letter x")
	>> unless (numberToUnicode 140 == '\x0078')
				(error "IPA Number 140 to latin small letter x code point")
	>> unless (numberToUnicode 141 == 'ɣ')
				(error "IPA Number 141 to latin small letter gamma")
	>> unless (numberToUnicode 141 == '\x0263')
				(error "IPA Number 141 to latin small letter gamma code point")
	>> unless (numberToUnicode 142 == 'χ')
				(error "IPA Number 142 to greek small letter chi")
	>> unless (numberToUnicode 142 == '\x03C7')
				(error "IPA Number 142 to greek small letter chi code point")
	>> unless (numberToUnicode 143 == 'ʁ')
				(error "IPA Number 143 to latin letter small capital inverted r")
	>> unless (numberToUnicode 143 == '\x0281')
				(error "IPA Number 143 to latin letter small capital inverted r code point")
	>> unless (numberToUnicode 144 == 'ħ')
				(error "IPA Number 144 to latin small letter h with stroke")
	>> unless (numberToUnicode 144 == '\x0127')
				(error "IPA Number 144 to latin small letter h with stroke code point")
	>> unless (numberToUnicode 145 == 'ʕ')
				(error "IPA Number 145 to latin letter pharyngeal voiced fricative")
	>> unless (numberToUnicode 145 == '\x0295')
				(error "IPA Number 145 to latin letter pharyngeal voiced fricative code point")
	>> unless (numberToUnicode 146 == 'h')
				(error "IPA Number 146 to latin small letter h")
	>> unless (numberToUnicode 146 == '\x0068')
				(error "IPA Number 146 to latin small letter h code point")
	>> unless (numberToUnicode 147 == 'ɦ')
				(error "IPA Number 147 to latin small letter h with hook")
	>> unless (numberToUnicode 147 == '\x0266')
				(error "IPA Number 147 to latin small letter h with hook code point")
	>> unless (numberToUnicode 148 == 'ɬ')
				(error "IPA Number 148 to latin small letter l with belt")
	>> unless (numberToUnicode 148 == '\x026C')
				(error "IPA Number 148 to latin small letter l with belt code point")
	>> unless (numberToUnicode 149 == 'ɮ')
				(error "IPA Number 149 to latin small letter lezh")
	>> unless (numberToUnicode 149 == '\x026E')
				(error "IPA Number 149 to latin small letter lezh code point")
	>> unless (numberToUnicode 150 == 'ʋ')
				(error "IPA Number 150 to latin small letter v with hook")
	>> unless (numberToUnicode 150 == '\x028B')
				(error "IPA Number 150 to latin small letter v with hook code point")
	>> unless (numberToUnicode 151 == 'ɹ')
				(error "IPA Number 151 to latin small letter turned r")
	>> unless (numberToUnicode 151 == '\x0279')
				(error "IPA Number 151 to latin small letter turned r code point")
	>> unless (numberToUnicode 152 == 'ɻ')
				(error "IPA Number 152 to latin small letter turned r with hook")
	>> unless (numberToUnicode 152 == '\x027B')
				(error "IPA Number 152 to latin small letter turned r with hook code point")
	>> unless (numberToUnicode 153 == 'j')
				(error "IPA Number 153 to latin small letter j")
	>> unless (numberToUnicode 153 == '\x006A')
				(error "IPA Number 153 to latin small letter j code point")
	>> unless (numberToUnicode 154 == 'ɰ')
				(error "IPA Number 154 to latin small letter turned m with long leg")
	>> unless (numberToUnicode 154 == '\x0270')
				(error "IPA Number 154 to latin small letter turned m with long leg code point")
	>> unless (numberToUnicode 155 == 'l')
				(error "IPA Number 155 to latin small letter l")
	>> unless (numberToUnicode 155 == '\x006C')
				(error "IPA Number 155 to latin small letter l code point")
	>> unless (numberToUnicode 156 == 'ɭ')
				(error "IPA Number 156 to latin small letter l with retroflex hook")
	>> unless (numberToUnicode 156 == '\x026D')
				(error "IPA Number 156 to latin small letter l with retroflex hook code point")
	>> unless (numberToUnicode 157 == 'ʎ')
				(error "IPA Number 157 to latin small letter turned y")
	>> unless (numberToUnicode 157 == '\x028E')
				(error "IPA Number 157 to latin small letter turned y code point")
	>> unless (numberToUnicode 158 == 'ʟ')
				(error "IPA Number 158 to latin letter small capital l")
	>> unless (numberToUnicode 158 == '\x029F')
				(error "IPA Number 158 to latin letter small capital l code point")
	>> unless (numberToUnicode 176 == 'ʘ')
				(error "IPA Number 176 to latin letter bilabial click")
	>> unless (numberToUnicode 176 == '\x0298')
				(error "IPA Number 176 to latin letter bilabial click code point")
	>> unless (numberToUnicode 177 == 'ǀ')
				(error "IPA Number 177 to latin letter dental click")
	>> unless (numberToUnicode 177 == '\x01C0')
				(error "latin letter dental click code point")
	>> unless (numberToUnicode 178 == 'ǃ')
				(error "IPA Number 178 to latin letter retroflex click")
	>> unless (numberToUnicode 178 == '\x01C3')
				(error "latin letter retroflex click")
	>> unless (numberToUnicode 179 == 'ǂ')
				(error "IPA Number 179 to latin letter alveolar click")
	>> unless (numberToUnicode 179 == '\x01C2')
				(error "latin letter alveolar click code point")
	>> unless (numberToUnicode 180 == 'ǁ')
				(error "IPA Number 180 to latin letter lateral click")
	>> unless (numberToUnicode 180 == '\x01C1')
				(error "latin letter lateral click code point")
	>> unless (numberToUnicode 160 == 'ɓ')
				(error "IPA Number 160 to latin small letter b with hook")
	>> unless (numberToUnicode 160 == '\x0253')
				(error "latin small letter b with hook code point")
	>> unless (numberToUnicode 162 == 'ɗ')
				(error "IPA Number 162 to latin small letter d with hook")
	>> unless (numberToUnicode 162 == '\x0257')
				(error "latin small letter d with hook code point")
	>> unless (numberToUnicode 164 == 'ʄ')
				(error "IPA Number 164 to latin small letter dotless j with stroke and hook")
	>> unless (numberToUnicode 164 == '\x0284')
				(error "latin small letter dotless j with stroke and hook code point")
	>> unless (numberToUnicode 166 == 'ɠ')
				(error "IPA Number 166 to latin small letter g with hook")
	>> unless (numberToUnicode 166 == '\x0260')
				(error "latin small letter g with hook code point")
	>> unless (numberToUnicode 168 == 'ʛ')
				(error "IPA Number 168 to latin letter small capital g with hook")
	>> unless (numberToUnicode 168 == '\x029B')
				(error "latin letter small capital g with hook code point")
	>> unless (numberToUnicode 401 == 'ʼ')
				(error "IPA Number 401 to modifier letter apostrophe")
	>> unless (numberToUnicode 401 == '\x02BC')
				(error "modifier letter apostrophe code point")
	>> unless (numberToUnicode 301 == 'i')
				(error "IPA Number 301 to latin small letter i")
	>> unless (numberToUnicode 301 == '\x0069')
				(error "latin small letter i code point")
	>> unless (numberToUnicode 309 == 'y')
				(error "IPA Number 309 to latin small letter y")
	>> unless (numberToUnicode 309 == '\x0079')
				(error "latin small letter y code point")
	>> unless (numberToUnicode 317 == 'ɨ')
				(error "IPA Number 317 to latin small letter i with stroke")
	>> unless (numberToUnicode 317 == '\x0268')
				(error "latin small letter i with stroke code point")
	>> unless (numberToUnicode 318 == 'ʉ')
				(error "IPA Number 318 to latin small letter u bar")
	>> unless (numberToUnicode 318 == '\x0289')
				(error "latin small letter u bar code point")
	>> unless (numberToUnicode 316 == 'ɯ')
				(error "IPA Number 316 to latin small letter turned m")
	>> unless (numberToUnicode 316 == '\x026F')
				(error "latin small letter turned m code point")
	>> unless (numberToUnicode 308 == 'u')
				(error "IPA Number 308 to latin small letter u")
	>> unless (numberToUnicode 308 == '\x0075')
				(error "latin small letter u code point")
	>> unless (numberToUnicode 319 == 'ɪ')
				(error "IPA Number 319 to latin letter small capital i")
	>> unless (numberToUnicode 319 == '\x026A')
				(error "latin letter small capital i code paint")
	>> unless (numberToUnicode 320 == 'ʏ')
				(error "IPA Number 320 to latin letter small capital y")
	>> unless (numberToUnicode 320 == '\x028F')
				(error "latin letter small capital y code point")
	>> unless (numberToUnicode 321 == 'ʊ')
				(error "IPA Number 321 to latin small letter upsilon")
	>> unless (numberToUnicode 321 == '\x028A')
				(error "latin small letter upsilon code point")
	>> unless (numberToUnicode 302 == 'e')
				(error "IPA Number 302 to latin small letter e")
	>> unless (numberToUnicode 302 == '\x0065')
				(error "latin small letter e code point")
	>> unless (numberToUnicode 310 == 'ø')
				(error "IPA Number 310 to latin small letter o with stroke")
	>> unless (numberToUnicode 310 == '\x00F8')
				(error "latin small letter o with stroke code point")
	>> unless (numberToUnicode 397 == 'ɘ')
				(error "IPA Number 397 to latin small letter reversed e")
	>> unless (numberToUnicode 397 == '\x0258')
				(error "latin small letter reversed e code point")
	>> unless (numberToUnicode 323 == 'ɵ')
				(error "IPA Number 323 to latin small letter barred o")
	>> unless (numberToUnicode 323 == '\x0275')
				(error "latin small letter barred o code point")
	>> unless (numberToUnicode 315 == 'ɤ')
				(error "IPA Number 315 to latin small letter rams horn")
	>> unless (numberToUnicode 315 == '\x0264')
				(error "latin small letter rams horn code point")
	>> unless (numberToUnicode 307 == 'o')
				(error "IPA Number 307 to latin small letter o")
	>> unless (numberToUnicode 307 == '\x006F')
				(error "latin small letter o code point")
	>> unless (numberToUnicode 322 == 'ə')
				(error "IPA Number 322 to latin small letter schwa")
	>> unless (numberToUnicode 322 == '\x0259')
				(error "latin small letter schwa code point")
	>> unless (numberToUnicode 303 == 'ɛ')
				(error "IPA Number 303 to latin small letter open e")
	>> unless (numberToUnicode 303 == '\x025B')
				(error "latin small letter open e code point")
	>> unless (numberToUnicode 311 == 'œ')
				(error "IPA Number 311 to latin small ligature oe")
	>> unless (numberToUnicode 311 == '\x0153')
				(error "latin small ligature oe code point")
	>> unless (numberToUnicode 326 == 'ɜ')
				(error "IPA Number 326 to latin small letter reversed open e")
	>> unless (numberToUnicode 326 == '\x025C')
				(error "latin small letter reversed open e code point")
	>> unless (numberToUnicode 395 == 'ɞ')
				(error "IPA Number 395 to latin small letter closed reversed open e")
	>> unless (numberToUnicode 395 == '\x025E')
				(error "latin small letter closed reversed open e code point")
	>> unless (numberToUnicode 314 == 'ʌ')
				(error "IPA Number 314 to latin small letter turned v")
	>> unless (numberToUnicode 314 == '\x028C')
				(error "latin small letter turned v code point")
	>> unless (numberToUnicode 306 == 'ɔ')
				(error "IPA Number 306 to latin small letter open o")
	>> unless (numberToUnicode 306 == '\x0254')
				(error "latin small letter open o code point")
	>> unless (numberToUnicode 325 == 'æ')
				(error "IPA Number 325 to latin small letter ae")
	>> unless (numberToUnicode 325 == '\x00E6')
				(error "latin small letter ae code point")
	>> unless (numberToUnicode 324 == 'ɐ')
				(error "IPA Number 324 to latin small letter turned a")
	>> unless (numberToUnicode 324 == '\x0250')
				(error "latin small letter turned a code point")
	>> unless (numberToUnicode 304 == 'a')
				(error "IPA Number 304 to latin small letter a")
	>> unless (numberToUnicode 304 == '\x0061')
				(error "latin small letter a code point")
	>> unless (numberToUnicode 312 == 'ɶ')
				(error "IPA Number 312 to latin letter small capital oe")
	>> unless (numberToUnicode 312 == '\x0276')
				(error "latin letter small capital oe code point")
	>> unless (numberToUnicode 305 == 'ɑ')
				(error "IPA Number 305 to latin small letter alpha")
	>> unless (numberToUnicode 305 == '\x0251')
				(error "latin small letter alpha code point")
	>> unless (numberToUnicode 313 == 'ɒ')
				(error "IPA Number 313 to latin small letter turned alpha")
	>> unless (numberToUnicode 313 == '\x0252')
				(error "latin small letter turned alpha code point")
	>> unless (numberToUnicode 169 == 'ʍ')
				(error "IPA Number 169 to latin small letter turned w")
	>> unless (numberToUnicode 169 == '\x028D')
				(error "latin small letter turned w code point")
	>> unless (numberToUnicode 170 == 'w')
				(error "IPA Number 170 to latin small letter w")
	>> unless (numberToUnicode 170 == '\x0077')
				(error "latin small letter w code point")
	>> unless (numberToUnicode 171 == 'ɥ')
				(error "IPA Number 171 to latin small letter turned h")
	>> unless (numberToUnicode 171 == '\x0265')
				(error "latin small letter turned h code point")
	>> unless (numberToUnicode 172 == 'ʜ')
				(error "IPA Number 172 to latin letter small capital h")
	>> unless (numberToUnicode 172 == '\x029C')
				(error "latin letter small capital h code point")
	>> unless (numberToUnicode 174 == 'ʢ')
				(error "IPA Number 174 to latin letter reversed glottal stop with stroke")
	>> unless (numberToUnicode 174 == '\x02A2')
				(error "latin letter reversed glottal stop with stroke code point")
	>> unless (numberToUnicode 173 == 'ʡ')
				(error "IPA Number 173 to latin letter glottal stop with stroke")
	>> unless (numberToUnicode 173 == '\x02A1')
				(error "latin letter glottal stop with stroke code point")
	>> unless (numberToUnicode 182 == 'ɕ')
				(error "IPA Number 182 to latin small letter c with curl")
	>> unless (numberToUnicode 182 == '\x0255')
				(error "latin small letter c with curl code point")
	>> unless (numberToUnicode 183 == 'ʑ')
				(error "IPA Number 183 to latin small letter z with curl")
	>> unless (numberToUnicode 183 == '\x0291')
				(error "latin small letter z with curl code point")
	>> unless (numberToUnicode 181 == 'ɺ')
				(error "IPA Number 181 to latin small letter turned r with long leg")
	>> unless (numberToUnicode 181 == '\x027A')
				(error "latin small letter turned r with long leg code point")
	>> unless (numberToUnicode 175 == 'ɧ')
				(error "IPA Number 175 to latin small letter heng with hook")
	>> unless (numberToUnicode 175 == '\x0267')
				(error "latin small letter heng with hook code point")
	>> unless (numberToUnicode 433 == '͡')
				(error "IPA Number 433 to combining double inverted breve")
	>> unless (numberToUnicode 433 == '\x0361')
				(error "combining double inverted breve code point")
{-	We cannot represent both Unicode code points in one number, although that is what is happening.
>> unless (numberToUnicode 433 == '͜')
				(error "IPA Number 433 to combining double breve below")
	>> unless (numberToUnicode 433 == '\x035C')
				(error "combining double breve below code point")
-}
	>> unless (numberToUnicode 501 == 'ˈ')
				(error "IPA Number 501 to modifier letter vertical line")
	>> unless (numberToUnicode 501 == '\x02C8')
				(error "modifier letter vertical line code point")
	>> unless (numberToUnicode 502 == 'ˌ')
				(error "IPA Number 502 to modifier letter low vertical line")
	>> unless (numberToUnicode 502 == '\x02CC')
				(error "modifier letter low vertical line code point")
	>> unless (numberToUnicode 503 == 'ː')
				(error "IPA Number 503 to modifier letter triangular colon")
	>> unless (numberToUnicode 503 == '\x02D0')
				(error "modifier letter triangular colon code point")
	>> unless (numberToUnicode 504 == 'ˑ')
				(error "IPA Number 504 to modifier letter half triangular colon")
	>> unless (numberToUnicode 504 == '\x02D1')
				(error "modifier letter half triangular colon code point")
	>> unless (numberToUnicode 505 == '̆')
				(error "IPA Number 505 to combining breve")
	>> unless (numberToUnicode 505 == '\x0306')
				(error "combining breve code point")
	>> unless (numberToUnicode 507 == '|')
				(error "IPA Number 507 to vertical line")
	>> unless (numberToUnicode 507 == '\x007C')
				(error "vertical line code point")
	>> unless (numberToUnicode 508 == '‖')
				(error "IPA Number 508 to double vertical line")
	>> unless (numberToUnicode 508 == '\x2016')
				(error "double vertical line code point")
	>> unless (numberToUnicode 506 == '.')
				(error "IPA Number 506 to full stop")
	>> unless (numberToUnicode 506 == '\x002E')
				(error "full stop code point")
	>> unless (numberToUnicode 509 == '‿')
				(error "IPA Number 509 to undertie")
	>> unless (numberToUnicode 509 == '\x203F')
				(error "undertie code point")
	>> unless (numberToUnicode 402 == '̥')
				(error "IPA Number 402 to combining ring below")
	>> unless (numberToUnicode 402 == '\x0325')
				(error "combining ring below code point")


	>> unless (numberToUnicode 403 == '̬')
				(error "IPA Number 403 to combining caron below")
	>> unless (numberToUnicode 403 == '\x032C')
				(error "combining caron below code point")
	>> unless (numberToUnicode 404 == 'ʰ')
				(error "IPA Number 404 to modifier letter small h")
	>> unless (numberToUnicode 404 == '\x02B0')
				(error "modifier letter small h code point")
	>> unless (numberToUnicode 411 == '̹')
				(error "IPA Number 411 to combining right half ring below")
	>> unless (numberToUnicode 411 == '\x0339')
				(error "combining right half ring below code point")
	>> unless (numberToUnicode 412 == '̜')
				(error "IPA Number 412 to combining left half ring below")
	>> unless (numberToUnicode 412 == '\x031C')
				(error "combining left half ring below code point")
	>> unless (numberToUnicode 413 == '̟')
				(error "IPA Number 413 to combining plus sign below")
	>> unless (numberToUnicode 413 == '\x031F')
				(error "combining plus sign below")
	>> unless (numberToUnicode 414 == '̠')
				(error "IPA Number 414 to combining minus sign below")
	>> unless (numberToUnicode 414 == '\x0320')
				(error "combining minus sign below code point")
	>> unless (numberToUnicode 415 == '̈')
				(error "IPA Number 415 to combining diaeresis")
	>> unless (numberToUnicode 415 == '\x0308')
				(error "combining diaeresis code point")
	>> unless (numberToUnicode 416 == '̽')
				(error "IPA Number 416 to combining x above")
	>> unless (numberToUnicode 416 == '\x033D')
				(error "combining x above code point")

	>> unless (numberToUnicode 431 == '̩')
				(error "IPA Number 431 to combining vertical line below")
	>> unless (numberToUnicode 431 == '\x0329')
				(error "combining vertical line below code point")
	>> unless (numberToUnicode 432 == '̯')
				(error "IPA Number 432 to combining inverted breve below")
	>> unless (numberToUnicode 432 == '\x032F')
				(error "combining inverted breve below code point")
	>> unless (numberToUnicode 419 == '˞')
				(error "IPA Number 419 to modifier letter rhotic hook")
	>> unless (numberToUnicode 419 == '\x02DE')
				(error "modifier letter rhotic hook code point")
	>> unless (numberToUnicode 405 == '̤')
				(error "IPA Number 405 to combining diaeresis below")
	>> unless (numberToUnicode 405 == '\x0324')
				(error "combining diaeresis below code point")
	>> unless (numberToUnicode 406 == '̰')
				(error "IPA Number 406 to combining tilde below")
	>> unless (numberToUnicode 406 == '\x0330')
				(error "combining tilde below code point")
	>> unless (numberToUnicode 407 == '̼')
				(error "IPA Number 407 to combining seagul below")
	>> unless (numberToUnicode 407 == '\x033C')
				(error "combining seagul below code point")
	>> unless (numberToUnicode 420 == 'ʷ')
				(error "IPA Number 420 to modifier letter small w")
	>> unless (numberToUnicode 420 == '\x02B7')
				(error "modifier letter small w code point")
	>> unless (numberToUnicode 421 == 'ʲ')
				(error "IPA Number 421 to modifier letter small j")
	>> unless (numberToUnicode 421 == '\x02B2')
				(error "modifier letter small j code point")
	>> unless (numberToUnicode 422 == 'ˠ')
				(error "IPA Number 422 to modifier letter small gamma")
	>> unless (numberToUnicode 422 == '\x02E0')
				(error "modifier letter small gamma code point")
	>> unless (numberToUnicode 423 == 'ˤ')
				(error "IPA Number 423 to modifier letter small reversed glottal stop")
	>> unless (numberToUnicode 423 == '\x02E4')
				(error "modifier letter small reversed glottal stop code point")
	>> unless (numberToUnicode 428 == '̴')
				(error "IPA Number 428 to combining tilde overlay")
	>> unless (numberToUnicode 428 == '\x0334')
				(error "combining tilde overlay code point")
	>> unless (numberToUnicode 429 == '̝')
				(error "IPA Number 429 to combining up tack below")
	>> unless (numberToUnicode 429 == '\x031D')
				(error "combining up tack below code point")
	>> unless (numberToUnicode 430 == '̞')
				(error "IPA Number 430 to combining down tack below")
	>> unless (numberToUnicode 430 == '\x031E')
				(error "combining down tack below code point")
	>> unless (numberToUnicode 417 == '̘')
				(error "IPA Number 417 to combining left tack below")
	>> unless (numberToUnicode 417 == '\x0318')
				(error "combining left tack below code point")
	>> unless (numberToUnicode 418 == '̙')
				(error "IPA Number 418 to combining right tack below")
	>> unless (numberToUnicode 418 == '\x0319')
				(error "combining right tack below code point")
	>> unless (numberToUnicode 408 == '̪')
				(error "IPA Number 408 to combining bridge below")
	>> unless (numberToUnicode 408 == '\x032A')
				(error "combining bridge below code point")
	>> unless (numberToUnicode 409 == '̺')
				(error "IPA Number 409 to combining inverted bridge below")
	>> unless (numberToUnicode 409 == '\x033A')
				(error "combining inverted bridge below code point")
	>> unless (numberToUnicode 410 == '̻')
				(error "IPA Number 410 to combining square below")
	>> unless (numberToUnicode 410 == '\x033B')
				(error "combining square below code point")
	>> unless (numberToUnicode 424 == '̃')
				(error "IPA Number 424 to combining tilde")
	>> unless (numberToUnicode 424 == '\x0303')
				(error "combining tilde code point")
	>> unless (numberToUnicode 425 == 'ⁿ')
				(error "IPA Number 425 to superscript latin small letter n")
	>> unless (numberToUnicode 425 == '\x207F')
				(error "superscript latin small letter n code point")
	>> unless (numberToUnicode 426 == 'ˡ')
				(error "IPA Number 426 to modifier letter small l")
	>> unless (numberToUnicode 426 == '\x02E1')
				(error "modifier letter small l code point")
	>> unless (numberToUnicode 427 == '̚')
				(error "IPA Number 427 to combining left angle above")
	>> unless (numberToUnicode 427 == '\x031A')
				(error "combining left angle above code point")
	>> unless (numberToUnicode 512 == '̋')
				(error "IPA Number 512 to combining double acute accent")
	>> unless (numberToUnicode 512 == '\x030B')
				(error "combining double acute accent code point")
	>> unless (numberToUnicode 513 == '́')
				(error "IPA Number 513 to combining acute accent")
	>> unless (numberToUnicode 513 == '\x0301')
				(error "combining acute accent code point")
	>> unless (numberToUnicode 514 == '̄')
				(error "IPA Number 514 to combining macron")
	>> unless (numberToUnicode 514 == '\x0304')
				(error "combining macron code point")
	>> unless (numberToUnicode 515 == '̀')
				(error "IPA Number 515 to combining grave accent")
	>> unless (numberToUnicode 515 == '\x0300')
				(error "combining grave accent code point")
	>> unless (numberToUnicode 516 == '̏')
				(error "IPA Number 516 to combining double grave accent")
	>> unless (numberToUnicode 516 == '\x030F')
				(error "combining double grave accent code point")
	>> unless (numberToUnicode 517 == '↓')
				(error "IPA Number 517 to downwards arrow")
	>> unless (numberToUnicode 517 == '\x2193')
				(error "downwards arrow code point")
	>> unless (numberToUnicode 524 == '̌')
				(error "IPA Number 524 to combining caron")
	>> unless (numberToUnicode 524 == '\x030C')
				(error "combining caron code point")
	>> unless (numberToUnicode 525 == '̂')
				(error "IPA Number 525 to combining circumflex accent")
	>> unless (numberToUnicode 525 == '\x0302')
				(error "combining circumflex accent code point")
	>> unless (numberToUnicode 526 == '᷄')
				(error "IPA Number 526 to combining macron acute")
	>> unless (numberToUnicode 526 == '\x1DC4')
				(error "combining macron acute code point")
	>> unless (numberToUnicode 527 == '᷅')
				(error "IPA Number 527 to combining grave macron")
	>> unless (numberToUnicode 527 == '\x1DC5')
				(error "combining grave macron code point")
	>> unless (numberToUnicode 528 == '᷈')
				(error "IPA Number 528 to combining grave acute grave") 
	>> unless (numberToUnicode 528 == '\x1DC8')
				(error "combining grave acute grave code point") 
	>> unless (numberToUnicode 510 == '↗')
				(error "IPA Number 510 to north east arrow")
	>> unless (numberToUnicode 510 == '\x2197')
				(error "north east arrow code point")
	>> unless (numberToUnicode 511 == '↘')
				(error "IPA Number 511 to south east arrow")
	>> unless (numberToUnicode 511 == '\x2198')
				(error "south east arrow code point")
	>> unless (numberToUnicode 517 == '↓')
				(error "IPA Number 517 to downwards arrow")
	>> unless (numberToUnicode 517 == '\x2193')
				(error "downwards arrow code point")
	>> unless (numberToUnicode 518 == '↑')
				(error "IPA Number 518 to upwards arrow")
	>> unless (numberToUnicode 518 == '\x2191')
				(error "upwards arrow code point")
	>> unless (numberToUnicode 519 == '˥')
				(error "IPA Number 519 to modifier letter extra high tone bar")
	>> unless (numberToUnicode 519 == '\x02E5')
				(error "modifier letter extra high tone bar code point")
	>> unless (numberToUnicode 520 == '˦')
				(error "IPA Number 520 to modifier letter high tone bar")
	>> unless (numberToUnicode 520 == '\x02E6')
				(error "modifier letter high tone bar code point")
	>> unless (numberToUnicode 521 == '˧')
				(error "IPA Number 521 to modifier letter mid tone bar")
	>> unless (numberToUnicode 521 == '\x02E7')
				(error "modifier letter mid tone bar code point")
	>> unless (numberToUnicode 522 == '˨')
				(error "IPA Number 522 to modifier letter low tone bar")
	>> unless (numberToUnicode 522 == '\x02E8')
				(error "modifier letter low tone bar code point")
	>> unless (numberToUnicode 523 == '˩')
				(error "IPA Number 523 to modifier letter extra low tone bar")
	>> unless (numberToUnicode 523 == '\x02E9')
				(error "modifier letter extra low tone bar")
